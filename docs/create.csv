"name","description","execution mode","location","deprecated by"
"apoc.create.node(java.util.List<String> label,java.util.Map<String,Object> props)","apoc.create.node(['Label'], {key:value,...}) - create node with dynamic labels","WRITE","apoc.create.Create","N/A"
"apoc.create.addLabels(Object nodes,java.util.List<String> label)","apoc.create.addLabels( [node,id,ids,nodes], ['Label',...]) - adds the given labels to the node or nodes","WRITE","apoc.create.Create","N/A"
"apoc.create.setProperty(Object nodes,String key,Object value)","apoc.create.setProperty( [node,id,ids,nodes], key, value) - sets the given property on the node(s)","WRITE","apoc.create.Create","N/A"
"apoc.create.setRelProperty(Object relationships,String key,Object value)","apoc.create.setRelProperty( [rel,id,ids,rels], key, value) - sets the given property on the relationship(s)","WRITE","apoc.create.Create","N/A"
"apoc.create.setProperties(Object nodes,java.util.List<String> keys,java.util.List<Object> values)","apoc.create.setProperties( [node,id,ids,nodes], [keys], [values]) - sets the given property on the nodes(s)","WRITE","apoc.create.Create","N/A"
"apoc.create.setRelProperties(Object rels,java.util.List<String> keys,java.util.List<Object> values)","apoc.create.setRelProperties( [rel,id,ids,rels], [keys], [values]) - sets the given property on the relationship(s)","WRITE","apoc.create.Create","N/A"
"apoc.create.setLabels(Object nodes,java.util.List<String> label)","apoc.create.setLabels( [node,id,ids,nodes], ['Label',...]) - sets the given labels, non matching labels are removed on the node or nodes","WRITE","apoc.create.Create","N/A"
"apoc.create.removeLabels(Object nodes,java.util.List<String> label)","apoc.create.removeLabels( [node,id,ids,nodes], ['Label',...]) - removes the given labels from the node or nodes","WRITE","apoc.create.Create","N/A"
"apoc.create.nodes(java.util.List<String> label,java.util.List<java.util.Map<String,Object>> props)","apoc.create.nodes(['Label'], [{key:value,...}]) create multiple nodes with dynamic labels","WRITE","apoc.create.Create","N/A"
"apoc.create.relationship(org.neo4j.graphdb.Node from,String relType,java.util.Map<String,Object> props,org.neo4j.graphdb.Node to)","apoc.create.relationship(person1,'KNOWS',{key:value,...}, person2) create relationship with dynamic rel-type","WRITE","apoc.create.Create","N/A"
"apoc.create.vNode(java.util.List<String> label,java.util.Map<String,Object> props)","apoc.create.vNode(['Label'], {key:value,...}) returns a virtual node","DEFAULT","apoc.create.Create","N/A"
"apoc.create.vNodes(java.util.List<String> label,java.util.List<java.util.Map<String,Object>> props)","apoc.create.vNodes(['Label'], [{key:value,...}]) returns virtual nodes","DEFAULT","apoc.create.Create","N/A"
"apoc.create.vRelationship(org.neo4j.graphdb.Node from,String relType,java.util.Map<String,Object> props,org.neo4j.graphdb.Node to)","apoc.create.vRelationship(nodeFrom,'KNOWS',{key:value,...}, nodeTo) returns a virtual relationship","DEFAULT","apoc.create.Create","N/A"
"apoc.create.vPattern(java.util.Map<String,Object> from,String relType,java.util.Map<String,Object> props,java.util.Map<String,Object> to)","apoc.create.vPattern({_labels:['LabelA'],key:value},'KNOWS',{key:value,...}, {_labels:['LabelB'],key:value}) returns a virtual pattern","DEFAULT","apoc.create.Create","N/A"
"apoc.create.vPatternFull(java.util.List<String> labelsN,java.util.Map<String,Object> n,String relType,java.util.Map<String,Object> props,java.util.List<String> labelsM,java.util.Map<String,Object> m)","apoc.create.vPatternFull(['LabelA'],{key:value},'KNOWS',{key:value,...},['LabelB'],{key:value}) returns a virtual pattern","DEFAULT","apoc.create.Create","N/A"
"apoc.create.uuids(long count)","apoc.create.uuids(count) yield uuid - creates 'count' UUIDs ","DEFAULT","apoc.create.Create","N/A"
"apoc.create.uuid()","apoc.create.uuid() - creates an UUID","N/A","apoc.create.Create","N/A"
