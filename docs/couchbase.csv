"name","description","execution mode","location","deprecated by"
"apoc.couchbase.get(java.util.List<String> nodes,String bucket,String documentId)","apoc.couchbase.get(nodes, bucket, documentId) yield id, expiry, cas, mutationToken, content - retrieves a couchbase json document by its unique ID.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.exists(java.util.List<String> nodes,String bucket,String documentId)","apoc.couchbase.exists(nodes, bucket, documentId) yield value - check whether a couchbase json document with the given ID does exist.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.insert(java.util.List<String> nodes,String bucket,String documentId,String json)","apoc.couchbase.insert(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - insert a couchbase json document with its unique ID.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.upsert(java.util.List<String> nodes,String bucket,String documentId,String json)","apoc.couchbase.upsert(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - insert or overwrite a couchbase json document with its unique ID.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.append(java.util.List<String> nodes,String bucket,String documentId,String json)","apoc.couchbase.append(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - append a couchbase json document to an existing one.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.prepend(java.util.List<String> nodes,String bucket,String documentId,String json)","apoc.couchbase.prepend(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - prepend a couchbase json document to an existing one.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.remove(java.util.List<String> nodes,String bucket,String documentId)","apoc.couchbase.remove(nodes, bucket, documentId) yield id, expiry, cas, mutationToken, content - remove the couchbase json document identified by its unique ID.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.replace(java.util.List<String> nodes,String bucket,String documentId,String json)","apoc.couchbase.replace(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - replace the content of the couchbase json document identified by its unique ID.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.query(java.util.List<String> nodes,String bucket,String statement)","apoc.couchbase.query(nodes, bucket, statement) yield queryResult - executes a plain un-parameterized N1QL statement.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.posParamsQuery(java.util.List<String> nodes,String bucket,String statement,java.util.List<Object> params)","apoc.couchbase.posParamsQuery(nodes, bucket, statement, params) yield queryResult - executes a N1QL statement with positional parameters.","DEFAULT","apoc.couchbase.Couchbase","N/A"
"apoc.couchbase.namedParamsQuery(java.util.List<String> nodes,String bucket,String statement,java.util.List<String> paramNames,java.util.List<Object> paramValues)","apoc.couchbase.namedParamsQuery(nodes, bucket, statement, paramNames, paramValues) yield queryResult - executes a N1QL statement with named parameters.","DEFAULT","apoc.couchbase.Couchbase","N/A"
