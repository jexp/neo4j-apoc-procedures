import org.gradle.api.internal.artifacts.DefaultExcludeRule

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '4.0.3'  apply false
    id "com.bmuschko.nexus" version "2.3.1"
    id 'maven-publish'
    id 'antlr'
    id "org.sonarqube" version "2.7"
}

allprojects {
    group = 'org.neo4j.procedure'
    version = '4.1.0.1'
    archivesBaseName = 'apoc'
    description = """neo4j-apoc-procedures"""
}

subprojects {
    apply plugin: 'java'

    repositories {

        /*maven {  // this contains the neo4j 4.0.0-beta jars
        url "https://neo4j.bintray.com/community/"
    }*/
        jcenter()
        //mavenCentral()
        maven {
            url "https://repo.gradle.org/gradle/libs-releases"
        }
        mavenLocal()
    }


    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    task mySourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task myJavadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }
    test {
        //exclude '**/CypherProceduresClusterTest.class'//, '**/AtomicTest.class'

        // neo4jDockerImage system property is used in TestContainerUtil
        systemProperties 'user.language' : 'en' , 'user.country ' : 'US', 'neo4jDockerImage' : 'neo4j:4.1.0-enterprise', 'neo4jCommunityDockerImage': 'neo4j:4.1.0'

        maxHeapSize = "8G"
        forkEvery = 50
        maxParallelForks = 1 //Runtime.runtime.availableProcessors().intdiv(2) + 1

        if (System.env.TRAVIS !=null) {
            minHeapSize = "128m"
            maxHeapSize = "512m"
        }

        filter {
            setFailOnNoMatchingTests(false)
        }

        ignoreFailures(true)
    }

    configurations {
        apt
    }


    compileJava {
        options.annotationProcessorPath = configurations.apt
        options.compilerArgs += ["-AIgnoreContextWarnings"]
    }

}

ext {
    // NB: due to version.json generation by parsing this file, the next line must not have any if/then/else logic
    neo4jVersion = "4.1.1"
    // instead we apply the override logic here
    neo4jVersionEffective = project.hasProperty("neo4jVersionOverride") ? project.getProperty("neo4jVersionOverride") : neo4jVersion
    testContainersVersion = '1.12.2'
}